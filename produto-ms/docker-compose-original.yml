 version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      - rede-ms
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    networks:
      - rede-ms
    environment:
      KAFKA_BROKER_ID: -1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${host}:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
  postgres:
    image: postgres:9.3
    ports:
      - 5432:5432
    networks:
      - rede-ms
    environment:
      - POSTGRES_USER=${user_bd}
      - POSTGRES_PASSWORD=${senha_bd}
      - POSTGRES_DB=${nome_bd_produtoms}
    volumes:
      - ./pgdata:/var/lib/postgresql/data
      - ./init-db-produto.sql:/docker-entrypoint-initdb.d/init-db-produto.sql
  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - spring.datasource.url=jdbc:postgresql://${host}:5432/${nome_bd_produtoms}
      - spring.datasource.password=${senha_bd}
      - spring.datasource.username=${user_bd}
      - spring.kafka.bootstrap-servers=${server_kafka}
    ports:
      - 8082:8082
    networks:
      - rede-ms
    depends_on:
      - postgres
      - zookeeper
      - kafka
networks:
  rede-ms:
    driver: bridge