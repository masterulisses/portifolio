version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - rede-01
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: -1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${host}:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - rede-01
  postgres-produto-ms:
    image: postgres:9.3
    ports:
      - 5432:5432
    networks:
      - rede-01
    environment:
      - POSTGRES_USER=${user_bd}
      - POSTGRES_PASSWORD=${senha_bd}
      - POSTGRES_DB=${nome_bd_produtoms}
    volumes:
      - ./init-db-produto.sql:/docker-entrypoint-initdb.d/init-db-produto.sql
  postgres-venda-ms:
    image: postgres:9.3
    ports:
      - 5433:5432
    networks:
      - rede-01
    environment:
      - POSTGRES_USER=${user_bd}
      - POSTGRES_PASSWORD=${senha_bd}
      - POSTGRES_DB=${nome_bd_vendams}
    volumes:
      - ./init-db-venda.sql:/docker-entrypoint-initdb.d/init-venda.sql
  produto-ms:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8082:8082
    depends_on:
      - zookeeper
      - kafka
      - postgres-produto-ms
    environment:
      - spring_datasource_url=jdbc:postgresql://${host}:5432/${nome_bd_produtoms}
      - spring_datasource_password=${senha_bd}
      - spring_datasource_username=${user_bd}
      - spring_kafka_bootstrap-servers=${server_kafka}
    networks:
      - rede-01
  venda-ms:
    build:
      context: ${dir_venda_ms}
      dockerfile: Dockerfile
    ports:
      - 8081:8081
      - 5005:5005
    depends_on:
      - zookeeper
      - kafka
      - postgres-venda-ms
    environment:
      - spring_datasource_url=jdbc:postgresql://${host}:5433/${nome_bd_vendams}
      - spring_datasource_password=${senha_bd}
      - spring_datasource_username=${user_bd}
      - spring_kafka_bootstrap-servers=${server_kafka}
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=0.0.0.0:5005
    networks:
      - rede-01
networks:
  rede-01:
    driver: bridge